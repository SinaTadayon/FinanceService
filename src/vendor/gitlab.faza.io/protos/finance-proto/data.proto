//
// This file contains data which will be serialized into
// request data body, or response data body for specified user types
syntax = "proto3";

package financesrv;

import "finance.proto";

//=================== Seller

message SellerFinanceList {
    string FID = 1; // finance-id
    uint64 UID = 2;
    string StartDate = 3;
    string EndDate = 4;
    string PaymentStatus = 5;
    Money Total = 6;
}

message SellerFinanceListCollection {
    repeated SellerFinanceList items = 1;
}

message SellerFinanceOrderItemList {
    string PaymentType = 1; // Shipment, Purchase
    uint64 OrderId = 2;

    // item
    message attribute {
        map<string, string> key_trans = 2;
        map<string, string> value_trans = 3;
    }

    string Title = 3;
    string Brand = 4;
    string Category = 5;
    string Guaranty = 6;
    map<string, attribute> Attribute = 8;

    string OrderCreateAt = 9;
    int32 Quantity = 10;
    string SKU = 11;

    message SellerShare {
        Money RoundupUnit = 1;
        Money RoundupTotal = 2;
    }

    message SellerCommission {
        float Rate = 1;
        Money RoundupUnit = 2;
        Money RoundupTotal = 3;
    }

    message RatedMoney {
        float Rate = 1;
        bool IsObliged = 2;
        Money RoundupUnit = 3;
        Money RoundupTotal = 4;
    }

    SellerShare share = 12;
    RatedMoney SSO = 13;
    RatedMoney VAT = 14;
    SellerCommission Commission = 15;
    Money ShippingFee = 16;
}

message SellerFinanceOrderItemCollection {
    repeated SellerFinanceOrderItemList items = 1;

    message SellerFinanceInvoice {
        Money Share = 1;
        Money SSO = 2;
        Money VAT = 3;
        Money Commission = 4;
        Money Shipment = 5;
    }

    SellerFinanceInvoice FinanceInvoice = 2;

    message financeData {
        string Iban = 1;
        string AccountHolderFirstName = 2;
        string accountHolderFamilyName = 3;
    }

    message sellerInfo {
        financeData FinanceData = 1;
        string ShopDisplayName = 2;
        bool IsVatObliged = 3;
        string Type = 4;
        string PostCode = 5;
    }

    sellerInfo SellerInf = 3;
}

message SellerFinanceOrderItemCollectionExported {
    repeated ExportData exportData = 1;
}

//=================== Buyer

//=================== Operator

//=================== Actions
message ActionRequest {
    message FinancesActionRequest {
        string exportType = 1; // which can be pdf, csv, etc..
        repeated uint64 FID = 2;
    }

    message TriggerActionRequest {
        string id = 1;
        string name = 2;
        string triggerType = 3;
        string group = 4;
        string executeMode = 5;
        string jobExecutionType = 6;
        repeated string triggerHistory = 7;
    }

    oneof data {
        FinancesActionRequest finances = 1;
        TriggerActionRequest trigger = 2;
    }
}

message ActionResponse {
    message FinanceActionResponse {
        string actionId = 1;
    }

    oneof data {
        FinanceActionResponse finance = 1;
    }
}

//=================== Export data
message ExportData {
    message Reason {
        string key = 1;
        bool hasDescription = 2;
        string translation = 3;
        repeated uint64 FID = 4;
    }

    string EXN = 1; // exportation number
    repeated uint64 FID = 2;
    string createdAt = 3;
    string status = 4; // the state is, Pending, InProgress, Failed -> reason, Succeeded -> link, Partial -> reason for wrong fid

    message File {
        string link = 1;
    }

    oneof result {
        File file = 5;
        Reason reason = 6;
    }
}
